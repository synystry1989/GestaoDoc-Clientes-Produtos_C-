<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACA/v0/4sa7MaKf/B4AAAAASUVORK5CYII=
</value>
  </data>
</root>